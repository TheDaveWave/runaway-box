/* html {
    position: fixed;
    overflow: none;
} */

/* body {
    margin: 5px;
    box-sizing: border-box; */
    /* height: 100%;
    width: 100%; */
    /* max-width: 950px;
    max-height: 900px;
} */

html, body {
    position: relative;
    margin: 0;
    border: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.dark-mode {
    background-color: #3C3C3C;
}

/* trying to use a container to make it so the runaway box
and its bounds do not leave the page.
does not work at the moment */
#container {
    margin: 0 auto;
    width: 100vw;
    height: 100vh;
    /* border: 1px dotted red; */
    /* overflow: hidden; */
}

/* set the styling for the box bounds so the runaway box
cannot be touched by the mouse/cursor by using a border*/
#box-bounds {
    position: relative;
    height: 50px;
    width: 50px;
    border: 25px;

    /* temporary styling */
    border-style: solid;
    border-color: transparent;
    /* border-color: rgba(0, 0, 0, 0.075); */
    
    /* Testing a circle */
    /* border-radius: 50%; */

    /* mouseenter and mouseleave only trigger on the border 
    and inwards (padding and content, not margin) */
    
    /* top: 200px;
    left: 200px; */

    /* for transition property: in function moveBox() change
    the amount the box moves to make transition actually cool */
    /* transition: 0.2s; */
}

/* style the runaway box */
#runaway-box {
    height: 50px;
    width: 50px;
    background-color: blue;
}

.dark-box {
    background-color: green !important;
}

/* For displaying mouse position with
getMouseCoords() function in client.js */
/* #mouse-postion {
    position: absolute;
    width: fit-content;
    height: fit-content;
    border: black 5px;
    z-index: 1;
} */
